{"ast":null,"code":"var _jsxFileName = \"/Users/geraldobuseh/Downloads/student-assist-bot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { ExclamationCircleIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: 'Hello! How can I help you with your studies today?'\n  }]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      role: 'user',\n      content: input.trim()\n    };\n    const newMessages = [...messages, userMsg];\n    setMessages(newMessages);\n    setInput('');\n    setError(null);\n    setIsLoading(true);\n    try {\n      console.log('Sending request to backend:', {\n        messages: newMessages\n      });\n      const res = await axios.post('http://localhost:5000/chat', {\n        messages: newMessages\n      });\n      console.log('Received response from backend:', res.data);\n      const botMsg = res.data.message;\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error in API call:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to send message. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Student Assist Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(ExclamationCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your question... (Press Enter to send)\",\n        rows: \"2\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: isLoading || !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G+sFmm/0jjIjS1XRWhRJw0GDX1A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ExclamationCircleIcon","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","role","content","isLoading","setIsLoading","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","userMsg","newMessages","console","log","res","post","data","botMsg","message","prev","err","_err$response","_err$response$data","response","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/geraldobuseh/Downloads/student-assist-bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { ExclamationCircleIcon } from '@heroicons/react/24/outline';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([\n    { role: 'assistant', content: 'Hello! How can I help you with your studies today?' }\n  ]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    \n    const userMsg = { role: 'user', content: input.trim() };\n    const newMessages = [...messages, userMsg];\n    setMessages(newMessages);\n    setInput('');\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      console.log('Sending request to backend:', { messages: newMessages });\n      const res = await axios.post('http://localhost:5000/chat', { messages: newMessages });\n      console.log('Received response from backend:', res.data);\n      const botMsg = res.data.message;\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      console.error('Error in API call:', err);\n      setError(err.response?.data?.error || 'Failed to send message. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">Student Assist Bot</h1>\n      \n      <div className=\"chat-container\">\n        {messages.map((msg, i) => (\n          <div key={i} className={`message ${msg.role}`}>\n            <span className=\"message-content\">\n              {msg.content}\n            </span>\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message assistant\">\n            <div className=\"typing-indicator\">\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <ExclamationCircleIcon />\n          {error}\n        </div>\n      )}\n\n      <div className=\"input-container\">\n        <textarea\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type your question... (Press Enter to send)\"\n          rows=\"2\"\n          disabled={isLoading}\n        />\n        <button\n          onClick={sendMessage}\n          disabled={isLoading || !input.trim()}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}