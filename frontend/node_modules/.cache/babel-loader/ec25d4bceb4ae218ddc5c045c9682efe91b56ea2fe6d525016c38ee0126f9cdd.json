{"ast":null,"code":"var _jsxFileName = \"/Users/geraldobuseh/Downloads/student-assist-bot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { ExclamationCircleIcon } from '@heroicons/react/24/outline';\n\n// Constants\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nconst INITIAL_MESSAGE = 'Hello!';\nconst SUBJECTS = {\n  math: {\n    name: 'Mathematics',\n    description: 'Algebra, Calculus, Geometry, and more',\n    icon: '📐'\n  },\n  science: {\n    name: 'Science',\n    description: 'Physics, Chemistry, Biology',\n    icon: '🔬'\n  },\n  history: {\n    name: 'History',\n    description: 'World History, US History, Ancient Civilizations',\n    icon: '📜'\n  },\n  english: {\n    name: 'English',\n    description: 'Literature, Writing, Grammar',\n    icon: '📚'\n  },\n  programming: {\n    name: 'Programming',\n    description: 'Coding, Algorithms, Computer Science',\n    icon: '💻'\n  }\n};\n\n// Helper function to convert markdown-like formatting to HTML\nconst formatMessage = content => {\n  // Convert headings\n  content = content.replace(/^# (.*$)/gm, '<h2>$1</h2>');\n  content = content.replace(/^## (.*$)/gm, '<h3>$1</h3>');\n\n  // Convert bold text\n  content = content.replace(/\\*\\*(.*?)\\*\\*/g, '<span class=\"key-term\">$1</span>');\n\n  // Convert bullet points\n  content = content.replace(/^[-*] (.*$)/gm, '<li>$1</li>');\n  content = content.replace(/(<li>.*<\\/li>)/gs, '<ul>$1</ul>');\n\n  // Convert numbered lists\n  content = content.replace(/^\\d+\\. (.*$)/gm, '<li>$1</li>');\n  content = content.replace(/(<li>.*<\\/li>)/gs, '<ol class=\"process-steps\">$1</ol>');\n\n  // Convert example blocks\n  content = content.replace(/^Example: (.*$)/gm, '<div class=\"example-block\">$1</div>');\n\n  // Convert visual descriptions\n  content = content.replace(/^Visual: (.*$)/gm, '<div class=\"visual-description\">$1</div>');\n\n  // Convert paragraphs\n  content = content.replace(/^(?!<[a-z])(.*$)/gm, '<p>$1</p>');\n  return content;\n};\nfunction App() {\n  _s();\n  // State management\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [showSubjectSelector, setShowSubjectSelector] = useState(true);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom when messages change\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  // Error handling helper\n  const handleError = useCallback(err => {\n    var _err$response, _err$response2;\n    console.error('Error in API call:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n    const errorDetails = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || {};\n    setError(`Error: ${errorDetails.error || 'Failed to send message'}\\n` + `Details: ${errorDetails.details || 'Please try again'}\\n` + (errorDetails.code ? `Code: ${errorDetails.code}\\n` : '') + (errorDetails.type ? `Type: ${errorDetails.type}` : ''));\n  }, []);\n\n  // Message sending logic\n  const sendMessage = useCallback(async (messageContent = null) => {\n    const content = messageContent || input.trim();\n    if (!content) return;\n    const userMsg = {\n      role: 'user',\n      content,\n      subject: selectedSubject\n    };\n    const newMessages = [...messages, userMsg];\n    setMessages(newMessages);\n    if (!messageContent) setInput('');\n    setError(null);\n    setIsLoading(true);\n    try {\n      const res = await axios.post(`${API_URL}/chat`, {\n        messages: newMessages,\n        subject: selectedSubject\n      });\n      const botMsg = res.data.message;\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [input, messages, handleError, selectedSubject]);\n\n  // Keyboard event handler\n  const handleKeyPress = useCallback(e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  }, [sendMessage]);\n\n  // Send initial message\n  useEffect(() => {\n    if (messages.length === 0 && selectedSubject) {\n      sendMessage(`I need help with ${SUBJECTS[selectedSubject].name}`);\n    }\n  }, [messages.length, sendMessage, selectedSubject]);\n  const handleSubjectSelect = subject => {\n    setSelectedSubject(subject);\n    setShowSubjectSelector(false);\n    setMessages([]); // Clear previous messages when changing subjects\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Student Assist Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), showSubjectSelector ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subject-grid\",\n        children: Object.entries(SUBJECTS).map(([key, subject]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"subject-card\",\n          onClick: () => handleSubjectSelect(key),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subject-icon\",\n            children: subject.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subject-name\",\n            children: subject.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subject-description\",\n            children: subject.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subject-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"change-subject-btn\",\n          onClick: () => setShowSubjectSelector(true),\n          children: \"Change Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"current-subject\",\n          children: [SUBJECTS[selectedSubject].icon, \" \", SUBJECTS[selectedSubject].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-content ${msg.format === 'formatted' ? 'formatted' : ''}`,\n            dangerouslySetInnerHTML: {\n              __html: msg.format === 'formatted' ? formatMessage(msg.content) : msg.content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationCircleIcon, {\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            margin: 0\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: `Ask a question about ${SUBJECTS[selectedSubject].name}... (Press Enter to send)`,\n          rows: \"2\",\n          disabled: isLoading,\n          \"aria-label\": \"Message input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(),\n          disabled: isLoading || !input.trim(),\n          \"aria-label\": \"Send message\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rsfidKX8szzuG9+uKW4MUoKr2mI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","axios","ExclamationCircleIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","INITIAL_MESSAGE","SUBJECTS","math","name","description","icon","science","history","english","programming","formatMessage","content","replace","App","_s","input","setInput","messages","setMessages","isLoading","setIsLoading","error","setError","selectedSubject","setSelectedSubject","showSubjectSelector","setShowSubjectSelector","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleError","err","_err$response","_err$response2","console","response","data","errorDetails","details","code","type","sendMessage","messageContent","trim","userMsg","role","subject","newMessages","res","post","botMsg","message","prev","handleKeyPress","e","key","shiftKey","preventDefault","length","handleSubjectSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","onClick","msg","i","format","dangerouslySetInnerHTML","__html","ref","style","whiteSpace","margin","value","onChange","target","onKeyPress","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/geraldobuseh/Downloads/student-assist-bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { ExclamationCircleIcon } from '@heroicons/react/24/outline';\n\n// Constants\nconst API_URL = 'http://localhost:5000';\nconst INITIAL_MESSAGE = 'Hello!';\n\nconst SUBJECTS = {\n  math: {\n    name: 'Mathematics',\n    description: 'Algebra, Calculus, Geometry, and more',\n    icon: '📐'\n  },\n  science: {\n    name: 'Science',\n    description: 'Physics, Chemistry, Biology',\n    icon: '🔬'\n  },\n  history: {\n    name: 'History',\n    description: 'World History, US History, Ancient Civilizations',\n    icon: '📜'\n  },\n  english: {\n    name: 'English',\n    description: 'Literature, Writing, Grammar',\n    icon: '📚'\n  },\n  programming: {\n    name: 'Programming',\n    description: 'Coding, Algorithms, Computer Science',\n    icon: '💻'\n  }\n};\n\n// Helper function to convert markdown-like formatting to HTML\nconst formatMessage = (content) => {\n  // Convert headings\n  content = content.replace(/^# (.*$)/gm, '<h2>$1</h2>');\n  content = content.replace(/^## (.*$)/gm, '<h3>$1</h3>');\n  \n  // Convert bold text\n  content = content.replace(/\\*\\*(.*?)\\*\\*/g, '<span class=\"key-term\">$1</span>');\n  \n  // Convert bullet points\n  content = content.replace(/^[-*] (.*$)/gm, '<li>$1</li>');\n  content = content.replace(/(<li>.*<\\/li>)/gs, '<ul>$1</ul>');\n  \n  // Convert numbered lists\n  content = content.replace(/^\\d+\\. (.*$)/gm, '<li>$1</li>');\n  content = content.replace(/(<li>.*<\\/li>)/gs, '<ol class=\"process-steps\">$1</ol>');\n  \n  // Convert example blocks\n  content = content.replace(/^Example: (.*$)/gm, '<div class=\"example-block\">$1</div>');\n  \n  // Convert visual descriptions\n  content = content.replace(/^Visual: (.*$)/gm, '<div class=\"visual-description\">$1</div>');\n  \n  // Convert paragraphs\n  content = content.replace(/^(?!<[a-z])(.*$)/gm, '<p>$1</p>');\n  \n  return content;\n};\n\nfunction App() {\n  // State management\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [showSubjectSelector, setShowSubjectSelector] = useState(true);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom when messages change\n  const scrollToBottom = useCallback(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  // Error handling helper\n  const handleError = useCallback((err) => {\n    console.error('Error in API call:', err.response?.data || err);\n    const errorDetails = err.response?.data || {};\n    setError(\n      `Error: ${errorDetails.error || 'Failed to send message'}\\n` +\n      `Details: ${errorDetails.details || 'Please try again'}\\n` +\n      (errorDetails.code ? `Code: ${errorDetails.code}\\n` : '') +\n      (errorDetails.type ? `Type: ${errorDetails.type}` : '')\n    );\n  }, []);\n\n  // Message sending logic\n  const sendMessage = useCallback(async (messageContent = null) => {\n    const content = messageContent || input.trim();\n    if (!content) return;\n    \n    const userMsg = { \n      role: 'user', \n      content,\n      subject: selectedSubject\n    };\n    const newMessages = [...messages, userMsg];\n    setMessages(newMessages);\n    if (!messageContent) setInput('');\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      const res = await axios.post(`${API_URL}/chat`, { \n        messages: newMessages,\n        subject: selectedSubject\n      });\n      const botMsg = res.data.message;\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [input, messages, handleError, selectedSubject]);\n\n  // Keyboard event handler\n  const handleKeyPress = useCallback((e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  }, [sendMessage]);\n\n  // Send initial message\n  useEffect(() => {\n    if (messages.length === 0 && selectedSubject) {\n      sendMessage(`I need help with ${SUBJECTS[selectedSubject].name}`);\n    }\n  }, [messages.length, sendMessage, selectedSubject]);\n\n  const handleSubjectSelect = (subject) => {\n    setSelectedSubject(subject);\n    setShowSubjectSelector(false);\n    setMessages([]); // Clear previous messages when changing subjects\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">Student Assist Bot</h1>\n      \n      {showSubjectSelector ? (\n        <div className=\"subject-selector\">\n          <h2>Select a Subject</h2>\n          <div className=\"subject-grid\">\n            {Object.entries(SUBJECTS).map(([key, subject]) => (\n              <button\n                key={key}\n                className=\"subject-card\"\n                onClick={() => handleSubjectSelect(key)}\n              >\n                <span className=\"subject-icon\">{subject.icon}</span>\n                <span className=\"subject-name\">{subject.name}</span>\n                <span className=\"subject-description\">{subject.description}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"subject-header\">\n            <button \n              className=\"change-subject-btn\"\n              onClick={() => setShowSubjectSelector(true)}\n            >\n              Change Subject\n            </button>\n            <h2 className=\"current-subject\">\n              {SUBJECTS[selectedSubject].icon} {SUBJECTS[selectedSubject].name}\n            </h2>\n          </div>\n\n          <div className=\"chat-container\">\n            {messages.map((msg, i) => (\n              <div key={i} className={`message ${msg.role}`}>\n                <div \n                  className={`message-content ${msg.format === 'formatted' ? 'formatted' : ''}`}\n                  dangerouslySetInnerHTML={{ \n                    __html: msg.format === 'formatted' ? formatMessage(msg.content) : msg.content \n                  }}\n                />\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"message assistant\">\n                <div className=\"typing-indicator\">\n                  <span className=\"dot\"></span>\n                  <span className=\"dot\"></span>\n                  <span className=\"dot\"></span>\n                </div>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n\n          {error && (\n            <div className=\"error-message\" role=\"alert\">\n              <ExclamationCircleIcon aria-hidden=\"true\" />\n              <pre style={{ whiteSpace: 'pre-wrap', margin: 0 }}>{error}</pre>\n            </div>\n          )}\n\n          <div className=\"input-container\">\n            <textarea\n              value={input}\n              onChange={e => setInput(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder={`Ask a question about ${SUBJECTS[selectedSubject].name}... (Press Enter to send)`}\n              rows=\"2\"\n              disabled={isLoading}\n              aria-label=\"Message input\"\n            />\n            <button\n              onClick={() => sendMessage()}\n              disabled={isLoading || !input.trim()}\n              aria-label=\"Send message\"\n            >\n              Send\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}